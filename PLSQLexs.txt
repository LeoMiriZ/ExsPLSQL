1 - Criar uma view na base de dados HR que exiba o nome do funcionário, salário, departamento, endereço do 
departamento e país.


CREATE OR REPLACE VIEW ex1 as
select EMPLOYEES.FIRST_NAME,
EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY,
DEPARTMENTS.DEPARTMENT_NAME,
LOCATIONS.STREET_ADDRESS,
COUNTRIES.COUNTRY_NAME
FROM
EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID;

SELECT * FROM EX1;

2 - Crie uma função que calcule a média de 4 valores.

CREATE OR REPLACE FUNCTION EX2 
(V1 IN INT, V2 IN INT, V3 IN INT, V4 IN INT)
RETURN FLOAT IS
BEGIN
RETURN (V1 + V2 + V3 + V4) / (4);
END EX2;

select EX2 (5,10,4,21)  from dual;

3 - Crie uma procedure que gere o Insert, Update e Delete da tabela DEPARTMENTS da 
base de dados HR.

CREATE OR REPLACE PROCEDURE EX3
(ID_DPTO NUMBER,
LETRA CHAR,
NOME VARCHAR2,
GERENTE NUMBER,
LUGAR NUMBER)
IS 
BEGIN
IF (LETRA = 'A') THEN
INSERT INTO DEPARTMENTS (DEPARTMENT_ID,DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID)
VALUES (ID_DPTO,NOME, GERENTE, LUGAR);
ELSE IF (LETRA = 'J') THEN
UPDATE DEPARTMENTS SET MANAGER_ID = GERENTE
WHERE MANAGER_ID > 200;
ELSE IF (LETRA = 'B') THEN
DELETE FROM DEPARTMENTS
WHERE LOCATION_ID < 1800;
END IF;
END IF;
END IF;
END EX3;

EXEC EX3 (102,'A', 'oLA', 4, 5);
EXEC EX3 (102,'J', 'oLA', 4, 5);
EXEC EX3 (102,'B', 'oLA', 4, 5);

SELECT * FROM DEPARTMENTS;

4 - Crie uma trigger que atualize o campo COMMISSION_PCT  da tabela EMPLOYEES, para 
0,6, toda vez que que o campo DEPARTMENT_ID for alterado para 60.

CREATE OR REPLACE TRIGGER EX4 

BEFORE UPDATE OF DEPARTMENT_ID ON EMPLOYEES 
FOR EACH ROW 
BEGIN 

IF :NEW.DEPARTMENT_ID = 60 THEN
    
UPDATE EMPLOYEES
SET COMMISSION_PCT = 0.6
WHERE EMPLOYEE_ID = :NEW.EMPLOYEE_ID;

END IF;
END;


5 - Crie uma rotina que calcule o percentual do salário de cada empregado para a média do 
MIN_SALARY e MAX_SALARY do seu JOB_ID.

DECLARE CURSOR SALARIO IS

SELECT E.EMPLOYEE_ID, E.SALARY, J.MIN_SALARY, J.MAX_SALARY
FROM EMPLOYEES E
        
INNER JOIN JOBS J ON J.JOB_ID = E.JOB_ID;

VAR_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
VAR_EMPLOYEE_SALARY EMPLOYEES.SALARY%TYPE;
VAR_MIN_SALARY   JOBS.MIN_SALARY%TYPE;
VAR_MAX_SALARY   JOBS.MAX_SALARY%TYPE;
VAR_AUX NUMBER;
VAR_AUX_2 NUMBER;

BEGIN
    
    OPEN SALARIO;
    
    LOOP
        
	FETCH SALARIO INTO VAR_EMPLOYEE_ID, VAR_EMPLOYEE_SALARY, VAR_MIN_SALARY, VAR_MAX_SALARY;
        
        EXIT WHEN SALARIO%NOTFOUND;
        
        VAR_AUX := (VAR_MIN_SALARY + VAR_MAX_SALARY) / (2);
        VAR_AUX_2 := (VAR_EMPLOYEE_SALARY * 100) / (VAR_AUX);
        
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE_ID ' || VAR_EMPLOYEE_ID || ' PERCENTUAL ' || VAR_AUX_2 || '%');
    
    END LOOP;
    
CLOSE SALARIO;
END;

6 - Crie uma rotina que calcule a média dos percentuais calculados no exercício anterior. 

CREATE OR REPLACE PROCEDURE EX6 
IS
VAR_AUX_3  INTEGER :=0;
VAR_AUX_4 INTEGER :=0;

BEGIN
    
    DECLARE
        
        CURSOR SALARIO IS
            
SELECT
E.SALARY,
J.MIN_SALARY,
J.MAX_SALARY
FROM EMPLOYEES E
            
INNER JOIN JOBS J ON J.JOB_ID = E.JOB_ID;
        
VAR_EMPLOYEE_SALARY EMPLOYEES.SALARY%TYPE;
VAR_MIN_SALARY JOBS.MIN_SALARY%TYPE;
VAR_MAX_SALARY JOBS.MAX_SALARY%TYPE;
VAR_AUX NUMBER;
VAR_AUX_2 NUMBER;
    
    BEGIN
        
        OPEN SALARIO;
       
        LOOP
            
            FETCH SALARIO INTO VAR_EMPLOYEE_SALARY, VAR_MIN_SALARY, VAR_MAX_SALARY;
            
            EXIT WHEN SALARIO%NOTFOUND;
            
            VAR_AUX := (VAR_MIN_SALARY + VAR_MAX_SALARY) / (2);
            VAR_AUX_2 := (VAR_EMPLOYEE_SALARY * 100) / (VAR_AUX);
            VAR_AUX_3 := VAR_AUX_3 + VAR_AUX_2;
            VAR_AUX_4 := VAR_AUX_4 + 1;
        
        END LOOP;
        
        CLOSE SALARIO;
    
    END;
    
    DBMS_OUTPUT.PUT_LINE('MÉDIA DOS PERCENTUAIS CALCULADOS NO EXERCÍCIO ANTERIOR: '|| (VAR_AUX_3) / (VAR_AUX_4));
    
END EX6;

EXEC EX6;


7 -  Crie uma rotina que calcule o bônus salarial de todos os funcionários dos departamentos 
Administration, Marketing, TI e Sales onde o valor do bônus segue a seguinte regra:

Funcionários de ADM: 2 vezes o salário atual + uma vez e meia o salário atual para cada promoção 
que o funcionário ganhou durante sua carreira na empresa
 
Funcionários de TI: 3 vezes o salário atual + meio salário atual para cada ano de trabalha na 
empresa
 
Funcionários de MKT: 2 vezes o salário atual + duas vezes e meia o salário atual para cada 
período de 3 anos que o funcionário trabalhou na empresa.

Funcionários de Sales: 1,5 vezes o salário atual + meio salário atual para cada ano de trabalha na 
empresa + o valor estipulado na tabela de bônus conforme sua região de atuação.

Tabela de Bônus por Região
ID Região Bonus 

1 Europe       6.000 
2 Americas     4.500 
3 Asia         5.000 
4 Middle East and Africa 3.500

DECLARE CURSOR BONUS IS

SELECT
E.EMPLOYEE_ID,
E.SALARY,
D.DEPARTMENT_ID,
EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM E.HIRE_DATE)
AS ANOS,
R.REGION_ID
FROM EMPLOYEES E
            
INNER JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
INNER JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
INNER JOIN COUNTRIES C ON C.COUNTRY_ID = L.COUNTRY_ID
INNER JOIN REGIONS R ON R.REGION_ID = C.REGION_ID
WHERE E.DEPARTMENT_ID IN (10,20,60,80);

VAR_EMPLOYEE_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
VAR_EMPLOYEE_SALARY EMPLOYEES.SALARY%TYPE;
VAR_DEPARTMENT_ID DEPARTMENTS.DEPARTMENT_ID%TYPE;
VAR_ANOS NUMBER;
VAR_REGION_ID REGIONS.REGION_ID%TYPE;
VAR_BONUS_SALARIO NUMBER;
VAR_BONUS_REGIAO NUMBER;
VAR_PROMOS NUMBER;

BEGIN
    
    OPEN BONUS;
    
    LOOP
        
        FETCH BONUS INTO VAR_EMPLOYEE_ID, VAR_EMPLOYEE_SALARY, VAR_DEPARTMENT_ID, VAR_ANOS, VAR_REGION_ID;
        
        EXIT WHEN BONUS%NOTFOUND;
        
CASE VAR_DEPARTMENT_ID

WHEN 10 THEN
            
SELECT COUNT(EMPLOYEE_ID) INTO VAR_PROMOS
FROM JOB_HISTORY

WHERE EMPLOYEE_ID = VAR_EMPLOYEE_ID
GROUP BY EMPLOYEE_ID;

VAR_BONUS_SALARIO := 2 * VAR_EMPLOYEE_SALARY + (1.5 * VAR_EMPLOYEE_SALARY) * VAR_PROMOS;
        
WHEN 20 THEN
 
 VAR_BONUS_SALARIO := 2 * VAR_EMPLOYEE_SALARY + (2.5 * VAR_EMPLOYEE_SALARY) * (VAR_ANOS / 3);

WHEN 60 THEN
 
VAR_BONUS_SALARIO := 3 * VAR_EMPLOYEE_SALARY + (0.5 * VAR_EMPLOYEE_SALARY) * VAR_ANOS;

ELSE
 
CASE VAR_REGION_ID

WHEN 1 THEN
VAR_BONUS_REGIAO := 6000;

WHEN 2 THEN
VAR_BONUS_REGIAO := 4500;
                    
WHEN 3 THEN
VAR_BONUS_REGIAO := 5000;
                    
ELSE
VAR_BONUS_REGIAO := 3500;

END CASE;

VAR_BONUS_SALARIO := 1.5 * VAR_EMPLOYEE_SALARY + (0.5 * VAR_EMPLOYEE_SALARY) * VAR_ANOS + VAR_BONUS_REGIAO;

END CASE;
        
DBMS_OUTPUT.PUT_LINE('EMPLOYEE_ID: '|| VAR_EMPLOYEE_ID || ' BÔNUS SALARIAL: $' || VAR_BONUS_SALARIO);

END LOOP;

CLOSE BONUS;
END;